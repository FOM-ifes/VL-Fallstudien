---
title: "Hauptkomponentenanalyse (HKA)"
lang: de
author: "Ihr Name"
date: last-modified
format: 
  html:
    toc: true
    html-math-method: katex
  pdf:
    toc: true
    number-sections: false
    colorlinks: true 
    papersize: a4
---

```{r}
#| label: setup
#| include: false

library(mosaic)
library(psych)
library(corrplot)
library(REdaS)
library(here)
```

# Grundidee

Die Hauptkomponentenanalyse (engl. Principal Component Analysis, "PCA") ist eine statistische Methode, mit der sich eine Vielzahl von Variablen (Spalten) zu wenigen, möglichst aussagekräftigen Hauptkomponenten zusammenfassen lassen. Das Ziel dieser Hauptkomponenten ist, Datensätze übersichtlicher zu machen (Dimensionsreduktion) und dabei gleichzeitig so wenige Informationen wie möglich zu verlieren.

Die entstandenen Hauptkomponenten sind voneinander unabhängig und können als  "normale" Variablen für weitere statistische Tests verwendet werden.

# Projekt IRLL (International Readiness in Lifelong Learning)

*Studie und Daten erklären (+ evtl. Verlinkung Fragebogen)*

## Daten einlesen und inspizieren

<!-- Technischer Hinweis: das Paket here (https://here.r-lib.org/) ermöglicht einen einfacheren Umgang mit Datei(pfaden) innerhalb von RStudio Projekten. Die csv Datei "irll.csv" befindet sich im Projektordner "data". -->

```{r}
# Datei (inkl. Pfad)
pfad_irll <- here("data", "irll.csv")
# Daten einlesen
irll <- read.csv2(pfad_irll, sep = ",")
# Datenstruktur
str(irll)
```

**Fragen:**

-   Was ist eine Beobachtungseinheit im Datensatz?

    -   *Antwort: Eine befragte Person.*

-   Wie wurden die Variablen erhoben? Welches Skalenniveau besitzen die Variablen?

    -   *Antwort: Die Variablen wurden mit einer 5-Punkt-Likert Skala erhoben. Das Skalenniveau der Variablen ist quasi-metrisch.*

-   Welche Variablen würden sich für eine Hauptkomponentenanalyse anbieten?

    -   *Antwort: Alle Variablen des Datensatzes (zumindest in meiner Version des Datensatzes) können mithilfe der HKA zusammengefasst werden.*

## Daten standardisieren

Die Hauptkomponentenanalyse ist sensitiv bezüglich unterschiedlicher Varianzen. Das bedeutet, dass Merkmale mit einer sehr hohen Varianz dominieren. Aus diesem Grund wird die Bildung der Hauptkomponenten auf Basis von z-standardisierten Variablen durchgeführt.

```{r}
# Standardisierung
irll_norm <- as.data.frame(scale(irll))
```

**Frage:**

-   Warum löst die Standardisierung das Problem der Varianz-Sensitivität der HKA?

    -   *Antwort: Da die standardisierten Variablen alle eine Varianz von 1 haben.*

## Eignung der Daten

Die Bildung der einzelnen Hauptkomponenten geschieht durch das Zusammenfassen von hoch korrelierten Variablen. Eine hohe Korrelation zwischen zwei Variablen deutet darauf hin, dass diese ähnliche oder nahezu gleiche Informationen beinhalten (Redundanz). Die HKA benutzt diese Redundanz, um sich ähnelnde Variablen zu einer Hauptkomponente zusammenzufassen.

Die Korrelation kann deshalb Hinweise darüber geben, ob sich die Daten für eine Hauptkomponentenanalyse eignen. Einen guten Überblick über die Korrelation zwischen den Variablen verschafft ein Korrelationsplot:

```{r}
# Korrelationsmatrix
cor_mtx <- cor(irll_norm)

# Korrelationsplot
corrplot(cor_mtx)
```

**Fragen:**

-   Ist es egal, ob wir uns die Korrelations- oder Kovarianz-Matrix anschauen? Warum?

    -   *Antwort: In diesem Fall schon, da die Daten standardisiert wurden und cor(X)==cov(X).*

-   Wie kann der blaue Punkt zwischen A020_A022 und A020_A021 interpretiert werden? Und wie kann der (blaß) rote Punkt zwischen A040_A050 und A020_A030 interpretiert werden?

    -   *Antwort (blau): Der lineare Zusammenhang zwischen der Selbsteinschätzung der eigenen Fähigkeiten in Bezug auf das Verständnis wissenschaftlicher Texte in englischer Sprache und der Selbsteinschätzung der eigenen Fähigkeiten in Bezug auf das Verständnis von Fachvorträgen in englischer Sprache ist stark positiv.*
    
    -   *Antwort (rot): Der lineare Zusammenhang zwischen der Selbsteinschätzung der eigenen Fähigkeiten in Bezug auf Stressmanagement und der Wichtigkeit der eigenen Kompetenz bei Stressmanagement ist leicht negativ.*
    -   *Inhaltliche Interpretation?*

-   Warum sind manche Flächen im Korrelationsplot weiß und was bedeutet das?

    -   *Antwort: Eine Korrelation von 0 bedeutet, dass die beiden Variablen linear nicht voneinander abhängen.*

-   Welche Gruppen von Variablen, die sich ähnlich sind, können Sie entdecken?

-   Denken Sie, dass sich die Daten für eine Hauptkomponentenanalyse eignen?

### KMO-Kriterium

Zusätzlich zur Betrachtung des Korrelationsplot gibt es Tests, welche die Eignung der Daten für eine HKA überprüfen. Einer dieser Tests ist das Kaiser-Meyer-Olkin-Kriterium (Kaiser und Rice, 1974), welches aus den partiellen Korrelationen zwischen Variablenpaaren, also der Korrelationen jeder Variable mit jeder anderen Variablen, berechnet wird. Die möglichen Ergebnisse des KMO-Kriteriums variieren zwischen 0 und 1. Damit die Daten für eine HKA geeignet sind, sollte das Ergebnis einen Wert von 0.5 nicht unterschreiten.

```{r}
# Kaiser-Maier-Olkin-Kriterium
KMOS(irll_norm)$KMO
```

Frage:

-   Hat das KMO-Kriterium etwas an Ihrer Annahme über die Eignung der Daten geändert? Begründen Sie.

    -   *Antwort: Die Antwort sollte beinhalten, dass die Daten für eine HKA geeignet sind, da 0.817 \> 0.5.*

### Bartlett-Test

Ein weiterer Test, um herauszufinden, ob sich die Daten für eine HKA eignen, ist der sog. Bartlett-Test. Dieser überprüft, ob sich die Korrelationsmatrix von einer Einheitsmatrix unterscheidet. Wenn sich die Daten für eine HKA eignen, dann sollte der Bartlett-Test die Nullhypothese, die Korrelationsmatrix unterscheidet sich nicht von einer Einheitsmatrix, verwerfen.

```{r}
# Bartlett-Test
bart_spher(irll_norm)
```

Frage:

-   Kommt der Bartlett-Test zum selben Ergebnis? Warum?

    -   *Antwort: Ja, kommt er. Die Nullhypothese kann bei jeder gängigen Irrtumswahrscheinlichkeit abgelehnt werden.*

## Anzahl der Hauptkomponenten

Da sich die Daten für eine Hauptkomponentenanalyse eignen, wird im Anschluss die Anzahl der Hauptkomponenten bestimmt, welche ausreichend sind, um die wesentliche Struktur der betrachteten Merkmale abzubilden. Dies geschieht unter anderem anhand der Eigenwerte^[Multipliziert man eine Matrix mit einem Vektor, erhält man als Ergebnis wieder einen Vektor. Für quadratische Matrizen existieren bestimmte Vektoren - sogenannte **Eigenvektoren** -, die, wenn sie mit der Matrix multipliziert werden, ein Vielfaches des ursprünglichen Vektors ergeben. D. h. der Eigenvektor ändert seine Richtung nicht, er wird lediglich skaliert. Den Skalierungsfaktor bezeichnet man als **Eigenwert** einer Matrix.] unserer Datenmatrix.



### Screeplot

Eine Möglichkeit zur Bestimmung der optimalen Anzahl der Hauptkomponenten ist die grafische Darstellung der Eigenwerte, der sog. Screeplot. Dabei entspricht die optimale Anzahl der Hauptkomponenten der Anzahl der Eigenwerte, die vor dem Knick des Graphen ("Ellenbogen") liegen. Bei mehreren Knickstellen ist der stärkere bzw. weiter rechts stehende Knick zu berücksichtigen.

```{r}
# Screeplot
scree(irll_norm, factors = FALSE)
```

**Frage:**

-   Wie viele Hauptkomponenten würden Sie auf Basis des Screeplots bestimmen? Warum?

Der Screeplot ist zwar eine sehr beliebte Methode zur Bestimmung der Hauptkomponenten, allerdings ist er wie im vorliegenden Beispiel nicht immer einfach zu lesen. In solchen Fällen kann man auf andere Methoden und Faustregeln zurückgreifen.

### Eigenwert über 1 (Kaiser-Dickman-Kriterium)

Ein weiteres Kriterium zur Bestimmung der optimalen Anzahl von Hauptkomponenten ist die Betrachtung der Eigenwerte. Berücksichtigt werden dabei nur die Hauptkomponenten, deren Eigenwert größer als 1 ist.

**Frage:**

-   Hat sich Ihre Meinung aufgrund des Kaiser-Dickman-Kriteriums geändert?

    -   *"Richtige" Anzahl der Hauptkomponenten: 6*

### Varianz

Auch der Anteil an Varianz, welcher durch die Hauptkomponenten erklärt werden kann, dient als Maßstab zur Bestimmung der optimalen Anzahl. Demnach sollte durch die Hauptkomponenten ein möglichst großer Teil der ursprünglichen Variation erklärt werden.

Dies kann mithilfe der Eigenwerte der Korrelationsmatrix abgeschätzt werden. Die einzelnen Eigenwerte werden in Relation zu der Summe aller Eigenwerte gesetzt. Zusätzlich zum Anteil der Varianz der einzelnen Hauptkomponenten an der Gesamtvarianz wird die kumulierte Varianz ausgegeben.

```{r}
# Varianzanteil der Hauptkomponenten
round(eigen(cor_mtx)$values/sum(eigen(cor_mtx)$values), 3)

# Kumulierte Varianz der Hauptkomponenten
round(cumsum(eigen(cor_mtx)$values/sum(eigen(cor_mtx)$values)), 3)
```

**Fragen:**

-   Wie viel Prozent der Gesamtvarianz wird durch die zweite Hauptkomponente erklärt?

    -   *Antwort: ca. 17,7 % (Varianzanteil)*

-   Wie viel Prozent der Gesamtvarianz erklären die ersten 10 Hauptkomponenten?

    -   *Antwort: ca. 84,3 % (Kumulierte Varianz)*

-   Ändert das Varianz-Kriteruim etwas an der Anzahl der ausgewählten Hauptkomponenten?

    -   *Antwort. Nein. 71,8% ist ausreichend viel Varianz.*

## Analyse

Im folgenden Abschnitt wird die Hauptkomponentenanalyse mithilfe der *principal*-Funktion durchgeführt. Im Output werden die Ladungen (Korrelationen der ursprünglichen Variablen mit den Hauptkomponenten) ab einem Betrag von 0.5 angezeigt, gerundet und sortiert (jeweils innerhalb einer Komponente nach absteigenden Beträgen der Ladungen). Im unteren Teil des Output werden die Eigenwerte (`SS (sum of squares) loadings`), der Anteil der Hauptkomponenten an der Gesamtvarianz (`Proportion Var`), sowie die kumulierte Varianz (`Cumulative Var`) angegeben.^[Um die Ausgabe etwas übersichtlicher zu gestalten, wird anschließend an die Analyse noch ein nicht benötigter Teil der Ausgabe gelöscht.]

```{r}
# Hauptkomponentenanalyse ohne Rotation
hka <- principal(irll_norm, 6, rotate = "none")
# Löschen des nicht benötigten Outputs
hka$criteria <- NULL
# Grenzwert, sortieren und runden
print(hka, cut = 0.5, sort = TRUE, digits = 2)
```

Schaut man sich die Ladungen der einzelnen Variablen auf die Hauptkomponenten an, so erkennt man, dass einige Variablen auf mehrere Hauptkomponenten hoch laden. Dieser Umstand erschwert eine inhaltliche Interpretation der einzelnen Hauptkomponenten.

## Rotation

Um die Hauptkomponenten inhaltlich besser interpretieren zu können, wird eine Rotation der Hauptkomponenten vorgenommen. Das Ziel der Rotation ist, dass auf jeder Hauptkomponente einige Variablen hoch und die übrigen Variablen möglichst niedrig laden. Zusätzlich sollte jede Variable nur auf eine einzelne Hauptkomponente hoch laden, auf die übrigen niedrig.

Es gibt zwei verschiedene Arten von Rotationsverfahren, orthogonale und oblique Verfahren. Orthogonale Rotationsverfahren nehmen Unabhängigkeit zwischen den extrahierten Hauptkomponenten an und produzieren einfache Modelle, die sich gut interpretieren lassen. Allerdings bilden orthogonale Verfahren durch die Annahme der Unabhängigkeit die Realität meistens nicht so gut ab, wie oblique Rotationsverfahren, welche wiederum etwas schwieriger zu interpretieren sind.

Eine oft verwendete orthogonale Rotationsmethode zur besseren Interpretation der Hauptkomponenten ist die Varimax-Rotation:

```{r}
#Varimax Rotation
hka_rotiert <- principal(irll_norm, 6, rotate = "varimax")
# Löschen des nicht benötigten Outputs
hka_rotiert$criteria <- NULL
# Grenzwert, sortieren und runden
print(hka_rotiert, cut = 0.5, sort = TRUE, digits = 2)
```

**Bitte inhaltliche Interpretation einfügen.**

# Your Turn

Jetzt sind Sie an der Reihe! Im folgenden Code-Anfang wird das Paket *"HDclassif"* installiert. Dieses Paket enthält den Datensatz **wine**. Dieser Datensatz ist das Ergebnis einer chemischen Analyse von Weinen, die in der gleichen Region in Italien angebaut werden, aber von drei verschiedenen Weinsorten (barolo, grignolino, barbera) stammen. Bei der Analyse wurden 13 Inhaltsstoffe bestimmt, die in jeder der drei Weinsorten enthalten sind.

Bitte kopieren Sie den folgenden Code-Block und fügen ihn in Ihre R-Umgebung ein. Nachdem Sie diesen ausgeführt haben, können Sie mit ihrer Hauptkomponentenanalyse starten.

```{r}
#| eval: false
# Wine-Datensatz laden
install.packages("HDclassif")
library(HDclassif)

data(wine)
```

*Soll ich hierfür auch eine Musterlösung erstellen?*
